# Application name
spring.application.name=LoginService

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/hms
spring.datasource.username=root
spring.datasource.password=YourPassword
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect




#euraka server


eureka.client.service-url.defaultZone=http://localhost:8762/eureka

#Admin server
#spring.boot.admin.client.url=http://localhost:8081


# Expose all actuator endpoints
management.endpoints.web.exposure.include=*

# Show full health info
management.endpoint.health.show-details=always

# Enable /actuator/env endpoint
management.endpoint.env.access=unrestricted

# Show actual values in /env (not masked)
management.endpoint.env.show-values=always


spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.instance.service-host-type=ip



spring.cloud.openfeign.enabled=true


# Enable circuit breaker
resilience4j.circuitbreaker.instances.default.registerHealthIndicator=true

# Sliding window settings
resilience4j.circuitbreaker.instances.default.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.default.slidingWindowSize=10

# Failure threshold
resilience4j.circuitbreaker.instances.default.failureRateThreshold=50

# Minimum number of calls before calculating failure rate
resilience4j.circuitbreaker.instances.default.minimumNumberOfCalls=5

# Wait duration before trying again after the circuit is open
resilience4j.circuitbreaker.instances.default.waitDurationInOpenState=10s

# Timeout for half-open state calls
resilience4j.circuitbreaker.instances.default.permittedNumberOfCallsInHalfOpenState=3

# Automatic transition from open to half-open
resilience4j.circuitbreaker.instances.default.automaticTransitionFromOpenToHalfOpenEnabled=true

# Record exceptions as failure
resilience4j.circuitbreaker.instances.default.recordExceptions=java.io.IOException, java.util.concurrent.TimeoutException
